{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","expression","expressionResult","className","this","onClick","handleExpression","setState","substring","length","evaluateExpression","disabled","char","evaluatedNum","eval","error","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"86CAUMA,I,iuBACJC,MAAQ,CACNC,WAAY,GACZC,iBAAkB,G,8MAEpB,WAAU,IAAD,OACP,OACE,kEAAKC,UAAU,MAAf,SACE,6EACE,kEAAIA,UAAU,0CAAd,UACE,gEAAGA,UAAU,+BADf,gBAIA,kEAAKA,UAAU,sDAAf,SACE,mEAAKA,UAAU,YAAf,UACE,iEAAIA,UAAU,aAAd,SACE,mEAAKA,UAAU,+CAAf,UACE,gEAAGA,UAAU,oBAAb,SAAkCC,KAAKJ,MAAMC,aAC7C,gEAAGE,UAAU,WAAb,SAAyBC,KAAKJ,MAAME,wBAGxC,mEAAKC,UAAU,yBAAf,UACE,qEACEA,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,mCACVE,QAAS,kBACP,EAAKE,SAAS,CAAEL,iBAAkB,EAAGD,WAAY,MAHrD,gBAQA,qEACEE,UAAU,4BACVE,QAAS,kBACP,EAAKE,SAAS,CACZN,WAAY,EAAKD,MAAMC,WAAWO,UAChC,EACA,EAAKR,MAAMC,WAAWQ,OAAS,MANvC,eAaA,qEACEN,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,4BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,SAIE,gEAAGH,UAAU,mBAEf,qEACEA,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,4BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,SAIE,gEAAGH,UAAU,mBAEf,qEACEA,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,4BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,SAIE,gEAAGH,UAAU,kBAEf,qEACEA,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,0BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,eAMA,qEACEH,UAAU,4BACVE,QAAS,kBAAM,EAAKC,iBAAiB,MAFvC,SAIE,gEAAGH,UAAU,oBAEf,qEACEA,UAAU,qCACVE,QAAS,kBAAM,EAAKK,sBACpBC,UAAUP,KAAKJ,MAAMC,WAAWQ,OAHlC,SAKE,gEAAGN,UAAU,mC,8BAU7B,SAAiBS,GACfR,KAAKG,SAAS,CAAEN,WAAYG,KAAKJ,MAAMC,WAAaW,M,gCAGtD,SAAAF,qBACE,IAAIG,aAEJ,IACEA,aAAeC,KAAKV,KAAKJ,MAAMC,YAC/B,MAAOc,OACPF,aAAe,MAGjBT,KAAKG,SAAS,CAAEL,iBAAkBW,mB,KA7KpBG,6CAAMC,WAiLTlB,2B,+BC3Lf,iEAMAmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46aed81a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nexport interface AppProps {}\n\nexport interface AppState {\n  expression: string;\n  expressionResult: number;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  state = {\n    expression: \"\",\n    expressionResult: 0,\n  };\n  render() {\n    return (\n      <div className=\"app\">\n        <div>\n          <h1 className=\"text-5xl text-center mt-20 font-poppins\">\n            <i className=\"fas fa-calculator-alt mr-2\"></i>\n            Calculator\n          </h1>\n          <div className=\"card bordered shadow max-w-lg mx-5 sm:mx-auto mt-10\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title\">\n                <div className=\"bg-base-200 rounded-box flex justify-end p-5\">\n                  <p className=\"w-full opacity-75\">{this.state.expression}</p>\n                  <p className=\"text-6xl\">{this.state.expressionResult}</p>\n                </div>\n              </h2>\n              <div className=\"grid grid-cols-4 gap-4\">\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"(\")}\n                >\n                  (\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\")\")}\n                >\n                  )\n                </button>\n                <button\n                  className=\"btn btn-error text-white text-lg\"\n                  onClick={() =>\n                    this.setState({ expressionResult: 0, expression: \"\" })\n                  }\n                >\n                  AC\n                </button>\n                <button\n                  className=\"btn btn-secondary text-lg\"\n                  onClick={() =>\n                    this.setState({\n                      expression: this.state.expression.substring(\n                        0,\n                        this.state.expression.length - 1\n                      ),\n                    })\n                  }\n                >\n                  C\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"7\")}\n                >\n                  7\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"8\")}\n                >\n                  8\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"9\")}\n                >\n                  9\n                </button>\n                <button\n                  className=\"btn btn-secondary text-lg\"\n                  onClick={() => this.handleExpression(\"*\")}\n                >\n                  <i className=\"fas fa-times\"></i>\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"4\")}\n                >\n                  4\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"5\")}\n                >\n                  5\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"6\")}\n                >\n                  6\n                </button>\n                <button\n                  className=\"btn btn-secondary text-lg\"\n                  onClick={() => this.handleExpression(\"-\")}\n                >\n                  <i className=\"fas fa-minus\"></i>\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"1\")}\n                >\n                  1\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"2\")}\n                >\n                  2\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"7\")}\n                >\n                  3\n                </button>\n                <button\n                  className=\"btn btn-secondary text-lg\"\n                  onClick={() => this.handleExpression(\"+\")}\n                >\n                  <i className=\"fas fa-plus\"></i>\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\"0\")}\n                >\n                  0\n                </button>\n                <button\n                  className=\"btn btn-primary text-lg\"\n                  onClick={() => this.handleExpression(\".\")}\n                >\n                  .\n                </button>\n                <button\n                  className=\"btn btn-secondary text-lg\"\n                  onClick={() => this.handleExpression(\"/\")}\n                >\n                  <i className=\"fas fa-divide\"></i>\n                </button>\n                <button\n                  className=\"btn btn-success text-white text-lg\"\n                  onClick={() => this.evaluateExpression()}\n                  disabled={this.state.expression.length ? false : true}\n                >\n                  <i className=\"fas fa-equals\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleExpression(char: string) {\n    this.setState({ expression: this.state.expression + char });\n  }\n\n  evaluateExpression() {\n    let evaluatedNum;\n\n    try {\n      evaluatedNum = eval(this.state.expression);\n    } catch (error) {\n      evaluatedNum = \"NaN\";\n    }\n\n    this.setState({ expressionResult: evaluatedNum });\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}